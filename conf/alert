# This configuration file is used by salt-alert.

##### Primary configuration settings #####
##########################################
# The address of the interface to bind to
#interface: 0.0.0.0
#
# The number of worker threads to start, these threads are used to manage
# return calls made from minions to the master, if the master seems to be
# running slowly, increase the number of threads
#worker_threads: 3
#
# The port to begin binding workers on, the workers will be created on
# increasingly higher ports
#worker_start_port: 45156

# The port used by the communication interface
#ret_port: 4507

# The root directory prepended to these options: pki_dir, cachedir, log_file.
#root_dir: /

# Directory used to store public key data
#pki_dir: /etc/salt/pki

# Directory to store job and cache data
#cachedir: /var/cache/salt

#####        Security settings       #####
##########################################
# Enable "open mode", this mode still maintains encryption, but turns off
# authentication, this is only intended for highly secure environments or for
# the situation where your keys end up in a bad state. If you run in open more
# you do so at your own risk!
#open_mode: False

# Enable auto_accept, this setting will automatically accept all incoming
# public keys from the minions
#auto_accept: False

#####         Cluster settings       #####
##########################################
# Salt supports automatic clustering, salt creates a single ip address which
# is shared among the individual salt components using ucarp. The private key
# and all of the minion keys are maintained across the defined cluster masters
# The failover service is automatically managed via these settings

# List the identifiers for the other cluster masters in this manner:
# [saltmaster-01.foo.com,saltmaster-02.foo.com,saltmaster-03.foo.com]
# The members of this master array must be running as salt minions to
# facilitate the distribution of cluster information
#cluster_masters: []

# The cluster modes are "paranoid" and "full"
# paranoid will only distribute the accepted minion public keys.
# full will also distribute the master private key.
#cluster_mode: paranoid

######         Logging settings       #####
###########################################
# The location of the alert log file
#log_file: /var/log/salt/alert
# The level of messages to send to the log file.
# One of 'info', 'quiet', 'critical', 'error', 'debug', 'warning'.
# Default: 'warning'
#log_level: warning
#
# Logger levels can be used to tweak specific loggers logging levels.
# Imagine you want to have the salt library at the 'warning' level, but, you
# still wish to have 'salt.modules' at the 'debug' level:
#   log_granular_levels: {
#     'salt': 'warning',
#     'salt.modules': 'debug'
#   }
#
#log_granular_levels: {}

######     Alert configuration        #####
###########################################

# Alert providers deliver alerts to users.  Typically providers include
# email and instant message services, but in the future may include SMS or
# pager services.
#
#   provider-name:
#     type: defautls to provider-name, must be in [email,aim,gtalk,jabber,aim]
#     host: server fqdn
#     port: server port
#     user: user name used to attach to service or send message from
#     password: user's password if needed
#     
#alert.providers:
#  email:
#    host: my_smtp_server
#    port: 25
#    user: My User <myuser@example.com>
#    password: mypassword
#  aim:
#    host: login.oscar.aol.com
#    port: 5190
#    user: myuser
#    password: mypassword
#  gtalk:
#    host: talk.google.com
#    port: 5222
#    user: myuser
#    password: mypassword
#  mycompany:
#    type: jabber
#    host: chat.example.com
#    port: 5222
#    user: myuser
#    password: mypassword

# The alert summary is used for SMS, alphanumeric pagers, and email
# subject lines.  The alert body is used for email bodies and chat
# messages.  The summary and body can be left at their default setting
# or overridden on a notification by notification basis.  The summary
# and body may contain the following variables:
#
#      ${severity} = alert severity in lower case, e.g. warning
#      ${SEVERITY} = alert severity in upper case, e.g. WARNING
#      ${category} = alert category, e.g. disk.full
#      ${msg}      = alert message
#      ${time}     = alert date and time in UTC
#      ${host}     = host alert occurred on

alert.default:
  time:
    format: '%c %Z'
    timezone: UTC
  summary: '${SEVERITY}: ${category}: "${msg}" on ${host} at ${time}'
  body: |
    severity: ${severity}
    host:     ${host}
    time:     ${time}
    category: ${category}
    message:  ${msg}

# Alert notification specifies how alerts should be delivered to the users.
# Recipients are either email addresses or a provider:user pair, e.g. aim:myname.
#
#    category-regex:
#      severity-regex:
#        recipients: list of addresses
#        summary: text used for SMS or "subject" in email
#        body: |
#          the message to send
#          that can span several lines

#alert.notifications:
#  # Send custom critical net alert message to the netops group
#  net.*:
#    critical:
#      recipients: netops@example.com
#      summary: ${SEVERITY} ${host} ${msg}
#      body: |
#        ${SEVERITY} ${category} alert on ${host} at ${time}:
#        ${msg}
#  # Send default alert message for all critical alerts to the on-call admin,
#  # Send all alerts to IT manager
#  .*:
#    critical:
#      recipients: >
#        aim:oncalladmin
#    .*:
#      recipients: itmgr@example.com
